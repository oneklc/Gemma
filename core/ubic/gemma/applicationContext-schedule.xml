<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd


           http://www.springframework.org/schema/task
          http://www.springframework.org/schema/task/spring-task-3.0.xsd">
	<!-- 
	author: keshav   
	$Id: applicationContext-schedule.xml,v 1.24 2013/04/09 17:40:02 sshao Exp $ 
-->

    <task:annotation-driven/>
	<!--
		Note: we cannot use @Scheduled and @Async because the security context is not available to the runnables they create.
	-->

	<!--
		Quartz Configuration. The schedulerFactorBean is the main entry point. See also QuartzUtils for how this can be turned
		off.
	-->
	<bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref local="indexTrigger" />
				<ref local="arrayDesignReportTrigger" />
				<ref local="expressionExperimentReportTrigger" />
				<ref local="whatsNewTrigger" />
				<ref local="gene2CsUpdateTrigger" />
				<ref local="twitterOutboundTrigger" />
				<!-- <ref local="viewTrigger" /> -->
				<!--<ref local="monitorSpaceTrigger" />-->
			</list>
		</property>
	</bean>

	<!-- Triggers -->
	<!--
		Cron trigger fields are: Seconds 0-59 , - * / Minutes 0-59 , - * / Hours 0-23 , - * / Day-of-month 1-31 , - * ? / L W
		Month 1-12 or JAN-DEC , - * / Day-of-Week 1-7 or SUN-SAT , - * ? / L # Year (Optional) empty, 1970-2099 , - * / See
		http://www.opensymphony.com/quartz/api/org/quartz/CronExpression.html for details,
		http://www.opensymphony.com/quartz/api/org/quartz/CronTrigger.html for examples. If you want a schedule that fire
		frequently for testing, try <value>0 0/2 * ? * *</value>.
	-->
	<bean id="indexTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="indexJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 15 1 ? * SAT</value><!-- Every Saturday at 1:15 am -->
		</property>
	</bean>
	<bean id="arrayDesignReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="arrayDesignReportJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 30 1 1 * ?</value><!-- monthly at 1:30  -->
		</property>
	</bean>
	<bean id="expressionExperimentReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="expressionExperimentReportJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 15 0 1 * ?</value><!-- monthly at 00:15 -->
		</property>
	</bean>
	<bean id="whatsNewTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="whatsNewJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 15 0 ? * *</value><!-- daily at 00:15 -->
		</property>
	</bean>
	<bean id="gene2CsUpdateTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="gene2CsUpdateJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 40 0 ? * *</value><!-- daily at 00:40 (should only update if it needs to) -->
		</property>
	</bean>
	<bean id="twitterOutboundTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="twitterOutboundJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 0 9 * * ?</value>
		</property>
	</bean>

<!-- TODO make this work in the space, disabling until then.  
	<bean id="viewTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail">
			<ref bean="viewJobDetail" />
		</property>
		<property name="cronExpression">
			<value>0 15 1 10 * ?</value> 
		</property>
	</bean>
-->
	<!--<bean id="monitorSpaceTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">-->
		<!--<property name="jobDetail">-->
			<!--<ref bean="monitorSpaceJobDetail" />-->
		<!--</property>-->
		<!--<property name="repeatInterval">-->
			<!--<value>5000</value> -->
		<!--</property>-->

		<!--<property name="startDelay" value="12" /> &lt;!&ndash;  wait before beginning &ndash;&gt;-->
	<!--</bean>-->


	<!-- Job details -->
	<bean id="indexJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="indexService" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>indexAll</value>
		</property>
	</bean>
	<bean id="arrayDesignReportJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="arrayDesignReportService" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>generateArrayDesignReport</value>
		</property>
	</bean>
	<bean id="expressionExperimentReportJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="expressionExperimentReportService" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>generateSummaryObjects</value>
		</property>
	</bean>
	<bean id="whatsNewJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="whatsNewService" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>generateWeeklyReport</value>
		</property>
	</bean>

	<bean id="gene2CsUpdateJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="tableMaintenanceUtil" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>updateGene2CsEntries</value>
		</property>
	</bean>
	<bean id="twitterOutboundJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="twitterOutbound" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>sendDailyFeed</value>
		</property>
	</bean>
	
	<!--  Configure Twitter feeds -->
	<bean id="twitterOutbound"
		class="ubic.gemma.web.feed.TwitterOutbound" />

<!--
	 
	<bean id="viewJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">
		<property name="targetObject">
			<ref bean="databaseViewGenerator" />
		</property>
		<property name="concurrent" value="false" />
		<property name="targetMethod">
			<value>runAll</value>
		</property>
	</bean>
-->
	<!--<bean id="monitorSpaceJobDetail" class="ubic.gemma.security.authentication.SecureMethodInvokingJobDetailFactoryBean">-->
		<!--<property name="targetObject">-->
			<!--<ref bean="spaceMonitor" />-->
		<!--</property>-->
		<!--<property name="concurrent" value="false" />&lt;!&ndash; set to true for interesting test &ndash;&gt;-->
		<!--<property name="targetMethod">-->
			<!--<value>ping</value>-->
		<!--</property>-->
	<!--</bean>-->
</beans>